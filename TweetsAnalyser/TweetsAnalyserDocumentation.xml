<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TweetsAnalyser</name>
    </assembly>
    <members>
        <member name="T:TweetsAnalyser.App">
            <summary>
            Interaction logic for App.xaml
            </summary>
            <summary>
            App
            </summary>
        </member>
        <member name="M:TweetsAnalyser.App.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:TweetsAnalyser.App.Main">
            <summary>
            Application Entry Point.
            </summary>
        </member>
        <member name="T:TweetsAnalyser.Model.DataBaseModel">
            <summary>
            The class creates a db context to support the database.
            </summary>
        </member>
        <member name="T:TweetsAnalyser.Model.DataBaseServiceModel">
            <summary>
            The class enables database management.
            </summary>
        </member>
        <member name="M:TweetsAnalyser.Model.DataBaseServiceModel.#ctor">
            <summary>
            A constructor who creates a new dbcontext to support the database.
            </summary>
        </member>
        <member name="M:TweetsAnalyser.Model.DataBaseServiceModel.add(TweetsAnalyser.Model.TweetModel)">
            <summary>
            Adds the elements given as an argument to the database.
            </summary>
            <param name="tweet"></param>
        </member>
        <member name="M:TweetsAnalyser.Model.DataBaseServiceModel.remove(TweetsAnalyser.Model.TweetModel)">
            <summary>
            Removes the element supplied as an argument from the database.
            </summary>
            <param name="tweet"></param>
        </member>
        <member name="M:TweetsAnalyser.Model.DataBaseServiceModel.clear">
            <summary>
            Removes all items from the database.
            </summary>
        </member>
        <member name="M:TweetsAnalyser.Model.DataBaseServiceModel.getAllFavoriteTweets">
            <summary>
            Retrieves all saved tweets from the database and returns a collection of objects
            </summary>
            <returns></returns>
        </member>
        <member name="T:TweetsAnalyser.Model.TweetModel">
            <summary>
            A class that supports a single tweet.
            </summary>
        </member>
        <member name="M:TweetsAnalyser.Model.TweetModel.#ctor">
            <summary>
            Nonparametric constructor.
            </summary>
        </member>
        <member name="M:TweetsAnalyser.Model.TweetModel.#ctor(Tweetinvi.Models.IUser,System.DateTime,System.String)">
            <summary>
            The parametric constructor initializes components with the values given as function arguments.
            </summary>
            <param name="tweetAuthor"></param>
            <param name="tweetPublishedDate"></param>
            <param name="tweetFullText"></param>
        </member>
        <member name="P:TweetsAnalyser.Model.TweetModel.Id">
            <summary>
            Tweet ID getter and setter.
            </summary>
        </member>
        <member name="P:TweetsAnalyser.Model.TweetModel.TweetAuthor">
            <summary>
            Tweet author getter and setter.
            </summary>
        </member>
        <member name="P:TweetsAnalyser.Model.TweetModel.TweetPublishedDate">
            <summary>
            Tweet published date getter and setter.
            </summary>
        </member>
        <member name="P:TweetsAnalyser.Model.TweetModel.TweetFullString">
            <summary>
            Tweet full text getter and setter.
            </summary>
        </member>
        <member name="P:TweetsAnalyser.Model.TweetModel.TweetAuthorImageURL">
            <summary>
            Tweet author image URL getter and setter.
            </summary>
        </member>
        <member name="T:TweetsAnalyser.Model.TweetServiceModel">
            <summary>
            A class that supports tweet management.
            </summary>
        </member>
        <member name="F:TweetsAnalyser.Model.TweetServiceModel._twitterUser">
            <summary>
            A private object that stores information about the currently logged in user
            </summary>
        </member>
        <member name="M:TweetsAnalyser.Model.TweetServiceModel.#ctor(Tweetinvi.Models.IAuthenticatedUser)">
            <summary>
            The parametric constructor initializes components with the values given as 
            function arguments and create object that contain tweets.
            </summary>
            <param name="twitterUser"></param>
        </member>
        <member name="M:TweetsAnalyser.Model.TweetServiceModel.setHomeTimeLineTweets">
            <summary>
            The method retrieves 30 last tweets from the logged-in user's table from twitter 
            Twitter service and assigns them to a private class variable.
            </summary>
        </member>
        <member name="M:TweetsAnalyser.Model.TweetServiceModel.setUserTimeLineTweets(System.String)">
            <summary>
            The method retrieves the last 30 tweets from the profile specified in the function 
            argument and assigns them to a private class variable.
            </summary>
            <param name="userName"></param>
        </member>
        <member name="M:TweetsAnalyser.Model.TweetServiceModel.setTweetList(System.Collections.Generic.IEnumerable{Tweetinvi.Models.ITweet})">
            <summary>
            the method adds to the private variable of the class all elements included in the 
            list given as the function argument.
            </summary>
            <param name="tweets"></param>
        </member>
        <member name="P:TweetsAnalyser.Model.TweetServiceModel.Tweets">
            <summary>
            Returns a list of tweets
            </summary>
        </member>
        <member name="T:TweetsAnalyser.Model.TwitterUserModel">
            <summary>
            A class that supports a twitter user.
            </summary>
        </member>
        <member name="M:TweetsAnalyser.Model.TwitterUserModel.#ctor">
            <summary>
            Nonparametric constructor. Performs user authentication.
            Create instance of user and instance og TweetServiceModel.
            </summary>
        </member>
        <member name="P:TweetsAnalyser.Model.TwitterUserModel.ProfileName">
            <summary>
            Profile name getter, return user profile name.
            </summary>
        </member>
        <member name="P:TweetsAnalyser.Model.TwitterUserModel.ProfileImageURL">
            <summary>
            Profile image URL getter, return user profile image URL.
            </summary>
        </member>
        <member name="P:TweetsAnalyser.Model.TwitterUserModel.TweetService">
            <summary>
            TwitterServiceModel getter, return TwitterServiceModel instance.
            </summary>
        </member>
        <member name="T:TweetsAnalyser.ViewModel.MainWindowViewModel">
            <summary>
            ViewModel of a MainWindow View. This is one and only ViewModel in the app.
            Contains all methods which serve the View => from buttons, to visibility changes.
            Implements INotifyPropertyChanged interface to make property updates available.
            </summary>
        </member>
        <member name="M:TweetsAnalyser.ViewModel.MainWindowViewModel.#ctor">
            <summary>
            Setup main services => Twitter' API and EntityFramework' DB.
            Sets the default scroll page to PWr_Wroclaw' timeline. 
            (scroll page always shows the content of <c>tweetCollection</c> member)
            </summary>
        </member>
        <member name="P:TweetsAnalyser.ViewModel.MainWindowViewModel.TwitterUser_ProfileName">
            <summary>
            Gets logged user' profile name.
            </summary>
        </member>
        <member name="P:TweetsAnalyser.ViewModel.MainWindowViewModel.TwitterUser_ProfileImage_URL">
            <summary>
            Gets logged user' profile image url.
            </summary>
        </member>
        <member name="P:TweetsAnalyser.ViewModel.MainWindowViewModel.SelectedTweet">
            <summary>
            Sets the SelectedTweet property to TweetModel object which is currently selected in the ListBox tweet scroller.
            Please refer the View/MainWindow.xaml/MainListBox.
            </summary>
        </member>
        <member name="P:TweetsAnalyser.ViewModel.MainWindowViewModel.User_Panel_Visibility">
            <summary>
            Sets and gets the visibility property of TweetSearch stack pannel.
            Please refer the View/MainWindow.xaml/TweetSearch.
            </summary>
        </member>
        <member name="P:TweetsAnalyser.ViewModel.MainWindowViewModel.User_To_Search">
            <summary>
            Sets and gets the username of user which' timeline should be downloaded via API.
            </summary>
        </member>
        <member name="P:TweetsAnalyser.ViewModel.MainWindowViewModel.Tweet_Collection">
            <summary>
            Sets and gets the main tweet collection. This is the collection which is displayed in the app.
            It holds currently downloaded tweets.
            </summary>
        </member>
        <member name="P:TweetsAnalyser.ViewModel.MainWindowViewModel.AddDeleteDB">
            <summary>
            Depending on actual app mode (downloaded or saved tweets display mode) returns proper function to bind the add/del 
            multi-functional button to.
            If <c>DeleteAddButtonContent</c> is set to 'Zapisz Tweeta' we are in downloaded tweets dispaly mode -> we can add some of them to DB.
            Thats why AddToDBButton function in returned. Similarly in saved tweets mode.
            Please refer the View/MainWindow.xaml/MultiButton.
            <see cref="P:TweetsAnalyser.ViewModel.MainWindowViewModel.DeleteAddButtonContent"/>
            <see cref="M:TweetsAnalyser.ViewModel.MainWindowViewModel.AddToDBButton"/>
            <see cref="M:TweetsAnalyser.ViewModel.MainWindowViewModel.DeleteFromDBButton"/>
            <see cref="T:TweetsAnalyser.ViewModel.CommandHandler"/>
            </summary>
        </member>
        <member name="P:TweetsAnalyser.ViewModel.MainWindowViewModel.Search_Button_Click">
            <summary>
            Binds SearchButton to proper function.
            Please refer the View/MainWindow.xaml/SearchButton.
            <see cref="T:TweetsAnalyser.ViewModel.CommandHandler"/>
            <see cref="M:TweetsAnalyser.ViewModel.MainWindowViewModel.SearchButton"/>
            </summary>
        </member>
        <member name="P:TweetsAnalyser.ViewModel.MainWindowViewModel.Go_To_Tweets_Button_Click">
            <summary>
            Binds DownloadedModeButton to proper function.
            Please refer the View/MainWindow.xaml/DownloadedModeButton.
            <see cref="T:TweetsAnalyser.ViewModel.CommandHandler"/>
            <see cref="M:TweetsAnalyser.ViewModel.MainWindowViewModel.GoToTweetsButton"/>
            </summary>
        </member>
        <member name="P:TweetsAnalyser.ViewModel.MainWindowViewModel.Go_To_Save_Button_Click">
            <summary>
            Binds SavedModeButton to proper function.
            Please refer the View/MainWindow.xaml/SavedModeButton.
            <see cref="T:TweetsAnalyser.ViewModel.CommandHandler"/>
            <see cref="M:TweetsAnalyser.ViewModel.MainWindowViewModel.GoToSavedButton"/>
            </summary>
        </member>
        <member name="P:TweetsAnalyser.ViewModel.MainWindowViewModel.OwnTimeline_Button_Click">
            <summary>
            Binds DownloadOwnButton to proper function.
            Please refer the View/MainWindow.xaml/DownloadOwnButton.
            <see cref="T:TweetsAnalyser.ViewModel.CommandHandler"/>
            <see cref="M:TweetsAnalyser.ViewModel.MainWindowViewModel.OwnTimelineButton"/>
            </summary>
        </member>
        <member name="M:TweetsAnalyser.ViewModel.MainWindowViewModel.SearchButton">
            <summary>
            Tries to pull and save <c>User_To_Serach</c> timeline from API. If any exception is thrown
            error dialog pops up.
            <see cref="T:TweetsAnalyser.View.UserNotFoundDialog"/>
            <see cref="M:TweetsAnalyser.Model.TweetServiceModel.setUserTimeLineTweets(System.String)"/>
            </summary>
        </member>
        <member name="M:TweetsAnalyser.ViewModel.MainWindowViewModel.OwnTimelineButton">
            <summary>
            Pulls and saves logged user' own timeline from API.
            <see cref="M:TweetsAnalyser.Model.TweetServiceModel.setUserTimeLineTweets(System.String)"/>
            </summary>
        </member>
        <member name="M:TweetsAnalyser.ViewModel.MainWindowViewModel.AddToDBButton">
            <summary>
            Adds TweetModel object to database. This object is get from SelectedTweet property.
            Method checks if property is not empty first.
            <see cref="M:TweetsAnalyser.Model.DataBaseServiceModel.add(TweetsAnalyser.Model.TweetModel)"/>
            <see cref="P:TweetsAnalyser.ViewModel.MainWindowViewModel.SelectedTweet"/>
            </summary>
        </member>
        <member name="M:TweetsAnalyser.ViewModel.MainWindowViewModel.DeleteFromDBButton">
            <summary>
            Deletes TweetModel object from database. This object is get from SelectedTweet property.
            Method checks if property is not empty first.
            <see cref="M:TweetsAnalyser.Model.DataBaseServiceModel.remove(TweetsAnalyser.Model.TweetModel)"/>
            <see cref="P:TweetsAnalyser.ViewModel.MainWindowViewModel.SelectedTweet"/>
            </summary>
        </member>
        <member name="P:TweetsAnalyser.ViewModel.MainWindowViewModel.DeleteAddButtonContent">
            <summary>
            Gets and sets the content of MultiButton.
            Please refer the View/MainWindow.xaml/MultiButton.
            </summary>
        </member>
        <member name="M:TweetsAnalyser.ViewModel.MainWindowViewModel.GoToSavedButton">
            <summary>
            Triggers the mode change to saved tweets mode.
            It swaps the donwloaded tweets with the DB ones and updates the MulitButton content. 
            It also changes the visibility of TweetSearch stack pannel.
            Please refer the View/MainWindow.xaml/TweetSearch.
            Please refer the View/MainWindow.xaml/MultiButton.
            <see cref="M:TweetsAnalyser.Model.DataBaseServiceModel.getAllFavoriteTweets"/>
            </summary>
        </member>
        <member name="M:TweetsAnalyser.ViewModel.MainWindowViewModel.GoToTweetsButton">
            <summary>
            Triggers the mode change to downloaded tweets mode.
            It swaps the DB tweets with the downloaded ones and updates the MulitButton content. 
            It also changes the visibility of TweetSearch stack pannel.
            Please refer the View/MainWindow.xaml/TweetSearch.
            Please refer the View/MainWindow.xaml/MultiButton.
            <see cref="T:TweetsAnalyser.Model.TweetServiceModel"/>
            </summary>
        </member>
        <member name="M:TweetsAnalyser.ViewModel.MainWindowViewModel.OnPropertyChanged(System.String)">
            <summary>
            Triggers the property-changed event. Every interested party will be notified.
            </summary>
        </member>
        <member name="T:TweetsAnalyser.ViewModel.CommandHandler">
            <summary>
            Simple ICommand interface wrapper.
            </summary>
        </member>
        <member name="M:TweetsAnalyser.ViewModel.CommandHandler.#ctor(System.Action,System.Func{System.Boolean})">
            <summary>
            Creates instance of the command handler.
            </summary>
            <param name="action">Action to be executed by the command</param>
            <param name="canExecute">A bolean property to containing current permissions to execute the command</param>
        </member>
        <member name="E:TweetsAnalyser.ViewModel.CommandHandler.CanExecuteChanged">
            <summary>
            Wires CanExecuteChanged event.
            </summary>
        </member>
        <member name="M:TweetsAnalyser.ViewModel.CommandHandler.CanExecute(System.Object)">
            <summary>
            Forces checking if execute is allowed.
            </summary>
        </member>
        <member name="M:TweetsAnalyser.ViewModel.CommandHandler.Execute(System.Object)">
            <summary>
            Overloaded ICommand function.
            Defines which command should be executed.
            </summary>
        </member>
        <member name="T:TweetsAnalyser.MainWindow">
            <summary>
            This class introduces simple logic for the main window in the app.
            </summary>
            <summary>
            MainWindow
            </summary>
        </member>
        <member name="M:TweetsAnalyser.MainWindow.#ctor">
            <summary>
            Initalizes the window (forces it to appear on the screen).
            </summary>
        </member>
        <member name="M:TweetsAnalyser.MainWindow.Close_app_button(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Wires up the close button. If its clicked -> the app will quit.
            </summary>
        </member>
        <member name="M:TweetsAnalyser.MainWindow.TextBox_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Sets the GotFocus event of the SearchTextBox.
            <see cref="F:TweetsAnalyser.MainWindow.SearchTextBox"/>
            </summary>
        </member>
        <member name="M:TweetsAnalyser.MainWindow.TextBox_LostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Sets the LostFocus event of the SearchTextBox.
            <see cref="F:TweetsAnalyser.MainWindow.SearchTextBox"/>
            </summary>
        </member>
        <member name="M:TweetsAnalyser.MainWindow.Window_MouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Sets the MouseDown event of the main window.
            If mouse will be clicked, the grid member will be focued.
            <see cref="F:TweetsAnalyser.MainWindow.grid"/>
            </summary>
        </member>
        <member name="M:TweetsAnalyser.MainWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:TweetsAnalyser.View.UserNotFoundDialog">
            <summary>
            This is a simple logic class for UserNotFoundDialog window.
            This is barely used since its just an error dialog AND we are using MVVM design pattern.
            </summary>
            <summary>
            UserNotFoundDialog
            </summary>
        </member>
        <member name="M:TweetsAnalyser.View.UserNotFoundDialog.#ctor">
            <summary>
            Initalizes the window (forces it to appear on the screen).
            </summary>
        </member>
        <member name="M:TweetsAnalyser.View.UserNotFoundDialog.Close_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Method which is wired to OK button. It is closing the window.
            </summary>
        </member>
        <member name="M:TweetsAnalyser.View.UserNotFoundDialog.Window_KeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Method which is wired to the dialog' keydown event.
            If enter key was hit then the dialog will be closed.
            </summary>
        </member>
        <member name="M:TweetsAnalyser.View.UserNotFoundDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
